# Python-fu

# virtualenvwrapper
export WORKON_HOME=~/.venvs
export VIRTUALENVWRAPPER_SCRIPT=/usr/local/bin/virtualenvwrapper.sh
source /usr/local/bin/virtualenvwrapper_lazy.sh

# Cache pip downloads
export PIP_DOWNLOAD_CACHE=$HOME/Library/Caches/pip-downloads

# autoenv
source $(brew --prefix autoenv)/activate.sh

# make a python virtualenv with extra options
function mkvenv {
    name=""
    if [ "${1}" == "" ]; then
        PWD=`pwd`
        name=`basename $PWD`
        echo "Name not specified, using current dir: $name"
    else
        name=${1}
    fi

    mkvirtualenv $name --distribute

    # make a .env in the current directory for autoenv magic
    echo "workon $name" > .env

    # symlink the venv to the current dir
    ln -s "$WORKON_HOME/$name" .venv
    echo "Symlinked $WORKON_HOME/$name to ./.venv"

    # using mkvirtualenv this way seems to break workon
    workon $name
}

function linkautoenv {
    name=${1}

    # make a .env in the current directory for autoenv magic
    echo "workon $name" > .env

    # symlink the venv to the current dir
    ln -s "$WORKON_HOME/$name" .venv
    echo "Symlinked $WORKON_HOME/$name to ./.venv"

    # using mkvirtualenv this way seems to break workon
    workon $name
}

# Create a virtual environment.
function mkvenv3 {
    defaultname=`basename $PWD`
    name=${1:-$defaultname}
    mkvirtualenv $name -a `pwd` -p `which python3`
    linkautoenv $name
}
function mkvenv2 {
    defaultname=`basename $PWD`
    name=${1:-$defaultname}
    mkvirtualenv $name -a `pwd` -p `which python2`
    linkautoenv $name
}

function fixclang {
    # clang fix: http://stackoverflow.com/a/22322645/3150057
    export CFLAGS=-Qunused-arguments
    export CPPFLAGS=-Qunused-arguments
}
function resetclang {
    unset CFLAGS CPPFLAGS
}
