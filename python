# Python-fu

# pyenv
if which pyenv >/dev/null 2>&1; then
    eval "$(pyenv init -)"
    pyenv virtualenvwrapper
else
    echo "Requires pyenv: brew install pyenv pyenv-virtualenv pyenv-virtualenvwrapper"
fi

# Requirements:
# - pyenv: `brew install pyenv` then `pyenv install 2.7.10` or other versions
# - pip: installed via pyenv
# - virtualenvwrapper: `brew install pyenv-virtualenv pyenv-virtualenvwrapper`
# Optional:
# - autoenv: `brew install autoenv`

# Usage:
# - `mkvenv2` for Python2 projects
# - `mkvenv3` for Python3 projects
# - `mkvenv` to use the default Python version

# virtualenvwrapper
export WORKON_HOME=$HOME/.venvs
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV="true"
export VIRTUALENVWRAPPER_WORKON_CD=

# Cache pip downloads
export PIP_DOWNLOAD_CACHE=$HOME/Library/Caches/pip-downloads

# autoenv
if ls $(brew --prefix autoenv) >/dev/null 2>&1; then
    source $(brew --prefix autoenv)/activate.sh
fi

# make a python virtualenv with extra options
function mkvenv {
    python_bin=""
    if [ "$1" == "" ]; then
        python_bin="python"
        # python --version prints to stderr, so redirect to stdout.
        # https://stackoverflow.com/a/37132287/3150057
        echo "Python version not specified, using default: $(python --version 2>&1) at $(pyenv which $python_bin)"
    else
        python_bin=$1
    fi

    name=""
    if [ "$2" == "" ]; then
        name=$(basename $PWD)
        echo "Name not specified, using current dir: $name"
    else
        name=$2
    fi

    mkvirtualenv $name -a $(pwd) -p $python_bin

    # make a .env in the current directory for autoenv magic
    echo "workon $name" > .env

    # fix libmemcached usage by pip under OS X: El Capitan
    echo "export LIBMEMCACHED=$(brew --prefix)" >> .env

    # symlink the venv to the current dir
    ln -s "$WORKON_HOME/$name" .venv
    echo "Symlinked $WORKON_HOME/$name to ./.venv"

    # activate the autoenv
    cd .

    # make sure the environment is activated
    workon $name

    # if memcached isn't installed, say that it should
    brew --prefix memcached >/dev/null 2>&1
    if [ $? -eq 1 ]; then
        echo "libmemcached is required: brew install memcached"
    fi
}

# Create a virtual environment.
function mkvenv3 {
    mkvenv python3 ${1:-""}
}
function mkvenv2 {
    mkvenv python2 ${1:-""}
}

function fixclang {
    # clang fix: http://stackoverflow.com/a/22322645/3150057
    export CFLAGS=-Qunused-arguments
    export CPPFLAGS=-Qunused-arguments
}
function resetclang {
    unset CFLAGS CPPFLAGS
}
